<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="me.snnupai.door.mapper.CommentMapper">
  <resultMap id="BaseResultMap" type="me.snnupai.door.pojo.Comment">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="entity_id" jdbcType="VARCHAR" property="entityId" />
    <result column="anonymous" jdbcType="INTEGER" property="anonymous" />
    <result column="remarks" jdbcType="VARCHAR" property="remarks" />
    <result column="ban_kuai_type" jdbcType="INTEGER" property="banKuaiType" />
    <result column="entity_type" jdbcType="INTEGER" property="entityType" />
    <result column="head_url" jdbcType="VARCHAR" property="headUrl" />
    <result column="nick_name" jdbcType="VARCHAR" property="nickName" />
    <result column="created_date" jdbcType="TIMESTAMP" property="createdDate" />
    <result column="updated_date" jdbcType="TIMESTAMP" property="updatedDate" />
    <result column="created_by" jdbcType="BIGINT" property="createdBy" />
    <result column="update_by" jdbcType="BIGINT" property="updateBy" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="post_id" jdbcType="VARCHAR" property="postId" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="me.snnupai.door.pojo.Comment">
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, entity_id, anonymous, remarks, ban_kuai_type, entity_type, head_url, nick_name, 
    created_date, updated_date, created_by, update_by, status, post_id
  </sql>
  <sql id="Blob_Column_List">
    content
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="me.snnupai.door.pojo.CommentExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from comment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByExample" parameterType="me.snnupai.door.pojo.CommentExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from comment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from comment
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from comment
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="me.snnupai.door.pojo.CommentExample">
    delete from comment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="me.snnupai.door.pojo.Comment">
    insert into comment (id, entity_id, anonymous, 
      remarks, ban_kuai_type, entity_type, 
      head_url, nick_name, created_date, 
      updated_date, created_by, update_by, 
      status, post_id, content
      )
    values (#{id,jdbcType=BIGINT}, #{entityId,jdbcType=VARCHAR}, #{anonymous,jdbcType=INTEGER}, 
      #{remarks,jdbcType=VARCHAR}, #{banKuaiType,jdbcType=INTEGER}, #{entityType,jdbcType=INTEGER}, 
      #{headUrl,jdbcType=VARCHAR}, #{nickName,jdbcType=VARCHAR}, #{createdDate,jdbcType=TIMESTAMP}, 
      #{updatedDate,jdbcType=TIMESTAMP}, #{createdBy,jdbcType=BIGINT}, #{updateBy,jdbcType=BIGINT}, 
      #{status,jdbcType=INTEGER}, #{postId,jdbcType=VARCHAR}, #{content,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="me.snnupai.door.pojo.Comment">
    insert into comment
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="entityId != null">
        entity_id,
      </if>
      <if test="anonymous != null">
        anonymous,
      </if>
      <if test="remarks != null">
        remarks,
      </if>
      <if test="banKuaiType != null">
        ban_kuai_type,
      </if>
      <if test="entityType != null">
        entity_type,
      </if>
      <if test="headUrl != null">
        head_url,
      </if>
      <if test="nickName != null">
        nick_name,
      </if>
      <if test="createdDate != null">
        created_date,
      </if>
      <if test="updatedDate != null">
        updated_date,
      </if>
      <if test="createdBy != null">
        created_by,
      </if>
      <if test="updateBy != null">
        update_by,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="postId != null">
        post_id,
      </if>
      <if test="content != null">
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="entityId != null">
        #{entityId,jdbcType=VARCHAR},
      </if>
      <if test="anonymous != null">
        #{anonymous,jdbcType=INTEGER},
      </if>
      <if test="remarks != null">
        #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="banKuaiType != null">
        #{banKuaiType,jdbcType=INTEGER},
      </if>
      <if test="entityType != null">
        #{entityType,jdbcType=INTEGER},
      </if>
      <if test="headUrl != null">
        #{headUrl,jdbcType=VARCHAR},
      </if>
      <if test="nickName != null">
        #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="createdDate != null">
        #{createdDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedDate != null">
        #{updatedDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createdBy != null">
        #{createdBy,jdbcType=BIGINT},
      </if>
      <if test="updateBy != null">
        #{updateBy,jdbcType=BIGINT},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="postId != null">
        #{postId,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="me.snnupai.door.pojo.CommentExample" resultType="java.lang.Long">
    select count(*) from comment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update comment
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.entityId != null">
        entity_id = #{record.entityId,jdbcType=VARCHAR},
      </if>
      <if test="record.anonymous != null">
        anonymous = #{record.anonymous,jdbcType=INTEGER},
      </if>
      <if test="record.remarks != null">
        remarks = #{record.remarks,jdbcType=VARCHAR},
      </if>
      <if test="record.banKuaiType != null">
        ban_kuai_type = #{record.banKuaiType,jdbcType=INTEGER},
      </if>
      <if test="record.entityType != null">
        entity_type = #{record.entityType,jdbcType=INTEGER},
      </if>
      <if test="record.headUrl != null">
        head_url = #{record.headUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.nickName != null">
        nick_name = #{record.nickName,jdbcType=VARCHAR},
      </if>
      <if test="record.createdDate != null">
        created_date = #{record.createdDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatedDate != null">
        updated_date = #{record.updatedDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createdBy != null">
        created_by = #{record.createdBy,jdbcType=BIGINT},
      </if>
      <if test="record.updateBy != null">
        update_by = #{record.updateBy,jdbcType=BIGINT},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.postId != null">
        post_id = #{record.postId,jdbcType=VARCHAR},
      </if>
      <if test="record.content != null">
        content = #{record.content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update comment
    set id = #{record.id,jdbcType=BIGINT},
      entity_id = #{record.entityId,jdbcType=VARCHAR},
      anonymous = #{record.anonymous,jdbcType=INTEGER},
      remarks = #{record.remarks,jdbcType=VARCHAR},
      ban_kuai_type = #{record.banKuaiType,jdbcType=INTEGER},
      entity_type = #{record.entityType,jdbcType=INTEGER},
      head_url = #{record.headUrl,jdbcType=VARCHAR},
      nick_name = #{record.nickName,jdbcType=VARCHAR},
      created_date = #{record.createdDate,jdbcType=TIMESTAMP},
      updated_date = #{record.updatedDate,jdbcType=TIMESTAMP},
      created_by = #{record.createdBy,jdbcType=BIGINT},
      update_by = #{record.updateBy,jdbcType=BIGINT},
      status = #{record.status,jdbcType=INTEGER},
      post_id = #{record.postId,jdbcType=VARCHAR},
      content = #{record.content,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update comment
    set id = #{record.id,jdbcType=BIGINT},
      entity_id = #{record.entityId,jdbcType=VARCHAR},
      anonymous = #{record.anonymous,jdbcType=INTEGER},
      remarks = #{record.remarks,jdbcType=VARCHAR},
      ban_kuai_type = #{record.banKuaiType,jdbcType=INTEGER},
      entity_type = #{record.entityType,jdbcType=INTEGER},
      head_url = #{record.headUrl,jdbcType=VARCHAR},
      nick_name = #{record.nickName,jdbcType=VARCHAR},
      created_date = #{record.createdDate,jdbcType=TIMESTAMP},
      updated_date = #{record.updatedDate,jdbcType=TIMESTAMP},
      created_by = #{record.createdBy,jdbcType=BIGINT},
      update_by = #{record.updateBy,jdbcType=BIGINT},
      status = #{record.status,jdbcType=INTEGER},
      post_id = #{record.postId,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="me.snnupai.door.pojo.Comment">
    update comment
    <set>
      <if test="entityId != null">
        entity_id = #{entityId,jdbcType=VARCHAR},
      </if>
      <if test="anonymous != null">
        anonymous = #{anonymous,jdbcType=INTEGER},
      </if>
      <if test="remarks != null">
        remarks = #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="banKuaiType != null">
        ban_kuai_type = #{banKuaiType,jdbcType=INTEGER},
      </if>
      <if test="entityType != null">
        entity_type = #{entityType,jdbcType=INTEGER},
      </if>
      <if test="headUrl != null">
        head_url = #{headUrl,jdbcType=VARCHAR},
      </if>
      <if test="nickName != null">
        nick_name = #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="createdDate != null">
        created_date = #{createdDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedDate != null">
        updated_date = #{updatedDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createdBy != null">
        created_by = #{createdBy,jdbcType=BIGINT},
      </if>
      <if test="updateBy != null">
        update_by = #{updateBy,jdbcType=BIGINT},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="postId != null">
        post_id = #{postId,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="me.snnupai.door.pojo.Comment">
    update comment
    set entity_id = #{entityId,jdbcType=VARCHAR},
      anonymous = #{anonymous,jdbcType=INTEGER},
      remarks = #{remarks,jdbcType=VARCHAR},
      ban_kuai_type = #{banKuaiType,jdbcType=INTEGER},
      entity_type = #{entityType,jdbcType=INTEGER},
      head_url = #{headUrl,jdbcType=VARCHAR},
      nick_name = #{nickName,jdbcType=VARCHAR},
      created_date = #{createdDate,jdbcType=TIMESTAMP},
      updated_date = #{updatedDate,jdbcType=TIMESTAMP},
      created_by = #{createdBy,jdbcType=BIGINT},
      update_by = #{updateBy,jdbcType=BIGINT},
      status = #{status,jdbcType=INTEGER},
      post_id = #{postId,jdbcType=VARCHAR},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="me.snnupai.door.pojo.Comment">
    update comment
    set entity_id = #{entityId,jdbcType=VARCHAR},
      anonymous = #{anonymous,jdbcType=INTEGER},
      remarks = #{remarks,jdbcType=VARCHAR},
      ban_kuai_type = #{banKuaiType,jdbcType=INTEGER},
      entity_type = #{entityType,jdbcType=INTEGER},
      head_url = #{headUrl,jdbcType=VARCHAR},
      nick_name = #{nickName,jdbcType=VARCHAR},
      created_date = #{createdDate,jdbcType=TIMESTAMP},
      updated_date = #{updatedDate,jdbcType=TIMESTAMP},
      created_by = #{createdBy,jdbcType=BIGINT},
      update_by = #{updateBy,jdbcType=BIGINT},
      status = #{status,jdbcType=INTEGER},
      post_id = #{postId,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>